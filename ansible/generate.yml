---
# generate some files for vagrant
- name: Generate some files for vagrant & provisioning
  hosts: default
  vars_files:
    - vars/vars.yml
  pre_tasks:
    - name: Install python for Ansible
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      changed_when: False
  tasks:
    - name: Generate info
      delegate_to: localhost
      template:
        src: "templates/info.json.j2"
        dest: "../data/info.json"

    - name: Generate metadata
      delegate_to: localhost
      template:
        src: "templates/metadata.json.j2"
        dest: "../data/metadata.json"

    - name: Generate Vgarantfile
      delegate_to: localhost
      template:
        src: "templates/Vagrantfile.j2"
        dest: "../data/Vagrantfile"

    - name: Enable ssh
      become: true
      service:
        name: ssh
        enabled: yes
        state: started

    - name: Generate prompt
      become: true
      blockinfile:
        path: "{{ item }}"
        marker: "#{mark} ANSIBLE MANAGED BLOCK"
        block: |
          DARKGRAY='\e[1;30m'
          LIGHTRED='\e[1;31m'
          GREEN='\e[32m'
          YELLOW='\e[1;33m'
          LIGHTBLUE='\e[1;34m'
          NC='\e[m'
          PCT="\`if [[ \$EUID -eq 0 ]]; then T='$LIGHTRED' ; else T='$LIGHTBLUE'; fi; echo \$T \`"
          PS1="\`if [[ \$EUID -eq 0 ]]; then PCT='$LIGHTRED' SIGN='#';
          else PCT='$LIGHTBLUE' SIGN='$'; fi;
          echo '\n\[$GREEN[\h:\w] \]\n$DARKGRAY['\$PCT'\t$DARKGRAY]-[$GREEN {{version}} $DARKGRAY|'\$PCT' \u $DARKGRAY] '\$SIGN' $NC'\`"
      loop:
        - /etc/bash.bashrc
        - /root/.bashrc
        - /home/vagrant/.bashrc

    - name: Create motd directory
      become: true
      file:
        path: "/etc/update-motd.d"
        state: directory

    - name: Copy motd files
      become: true
      copy:
        src: "files/{{ item }}"
        dest: "/etc/update-motd.d/{{ item }}"
        mode: 755
      loop:
        - 00-header
        - 10-sysinfo
        - 90-footer

    - name: Clean unessesary packages
      become: true
      package:
        name:
          - libmtp-runtime
          - qt4-doc-html
          - wxmaxima
          - inkscape
          - synaptic
          - jag
          - fly-all-optional
          - blender
          - swfdec-mozilla
          - maxima
          - qmmp
          - linux-image-4.15.3-2-hardened
        state: absent

    - name: Autoclean
      become: true
      apt:
        autoremove: yes

    - name: "Enable Autologin"
      become: yes
      replace:
        path: /etc/X11/fly-dm/fly-dmrc
        regexp: '{{ item.reg}}.*$'
        replace: '{{ item.repl }}\n'
        backup: yes
      loop:
        - { reg: "#AutoLoginEnable" , repl: "AutoLoginEnable=true" }
        - { reg: "#AutoLoginUser" , repl: "AutoLoginUser=vagrant" }
        - { reg: "#AutoLoginPass" , repl: "AutoLoginPass=vagrant" }
